/*!
@page driver_log Driver Change Log

@section flexcan FLEXCAN
  The current FLEXCAN driver version is 2.14.0.

  - 2.14.0
    - Improvements
      - Enter Freeze Mode first when enter Disable Mode on some platform.
      - Add feature macro for Pretended Networking because some FlexCAN instance do not have this feature.
      - Add new FlexCAN IRQ Handler FLEXCAN_DriverDataIRQHandler and FLEXCAN_DriverEventIRQHandler. Thses IRQ Handlers are
        used on soc which FlexCAN interrupts are grouped by specific function and assigned to different vector.
      - Update macro FLEXCAN_WAKE_UP_FLAG and FLEXCAN_PNWAKE_UP_FLAG to simplify code.
      - Replace macro FSL_FEATURE_FLEXCAN_HAS_NO_WAKMSK_SUPPORT with FSL_FEATURE_FLEXCAN_HAS_NO_SLFWAK_SUPPORT.
      - Replace macro FSL_FEATURE_FLEXCAN_HAS_NO_WAKSRC_SUPPORT with FSL_FEATURE_FLEXCAN_HAS_GLITCH_FILTER.
    - Bug Fixes
      - Fixed wrong interrupt and status flag helper macro in enumeration _flexcan_flags and API FLEXCAN_DisableInterrupts.
      - Fixed interrupt flag helper macro typo issue.
      - Remove flags which will are unassociated with interrupt in macro FLEXCAN_MEMORY_ERROR_INT_FLAG.
      - Remove flags which will are unassociated with interrupt in macro FLEXCAN_ERROR_AND_STATUS_INT_FLAG.
      - Fixed array out-of-bounds access when read enhanced Rx FIFO.

  - 2.13.1
    - Improvements
      - Conditionally compile interrupt handling code to solve the problem of using this driver on CPU cores that do not support interrupts.

  - 2.13.0
    - Improvements
      - Support payload endianness selection feature.

  - 2.12.0
    - Improvements
      - Support automatic Remote Response feature.
      - Add API FLEXCAN_SetRemoteResponseMbConfig() to configure automatic Remote Response mailbox.

  - 2.11.8
    - Improvements
      - Synchronize flexcan driver update on s32z platform.

  - 2.11.7
    - Bug Fixes
      - Fixed FLEXCAN_TransferReceiveEnhancedFifoEDMA() compatibility with edma5.

  - 2.11.6
    - Bug Fixes
      - Fixed ERRATA_9595 FLEXCAN_EnterFreezeMode() may result to bus fault on some platform.

  - 2.11.5
    - Bug Fixes
      - Fixed flexcan_memset() crash under high optimization compilation.

  - 2.11.4
    - Improvements
      - Update CANFD max bitrate to 10Mbps on MCXNx3x and MCXNx4x.
      - Release peripheral from reset if necessary in init function.

  - 2.11.3
    - Bug Fixes
      - Fixed FLEXCAN_TransferReceiveEnhancedFifoEDMA() compile error with DMA3.

  - 2.11.2
    - Bug Fixes
      - Fixed bug that timestamp in flexcan_handle_t not updated when RX
        overflow happens.

  - 2.11.1
    - Bug Fixes
      - Fixed violations of the MISRA C-2012 rules 10.1.

  - 2.11.0
    - Bug Fixes
      - Fixed wrong base address argument in FLEXCAN2 IRQ Handler.
    - Improvements
      - Add API to determine if the instance supports CAN FD mode at run time.

  - 2.10.1
    - Bug Fixes
      - Fixed HIS CCM issue.
      - Fixed RTOS issue by adding protection to read-modify-write operations on interrupt enable/disable API.

  - 2.10.0
    - Improvements
      - Update driver to make it able to support devices which has more than 64 8bytes MBs.
      - Update CAN FD transfer APIs to make them set/get edl bit according to frame content, which can make them compatible
        with classic CAN.

  - 2.9.2
    - Bug Fixes
      - Fixed the issue that FLEXCAN_CheckUnhandleInterruptEvents() can't detecting the exist enhanced RX FIFO interrupt status.
      - Fixed the issue that FLEXCAN_ReadPNWakeUpMB() does not return fail even no existing valid wake-up frame.
      - Fixed the issue that FLEXCAN_ReadEnhancedRxFifo() may clear bits other than the data available bit.
      - Fixed violations of the MISRA C-2012 rules 10.4, 10.8.
    - Improvements
      - Return kStatus_FLEXCAN_RxFifoDisabled instead of kStatus_Fail when read FIFO fail during IRQ handler.
      - Remove unreachable code from timing calculates APIs.
      - Update Enhanced Rx FIFO handler to make it deal with underflow/overflow status first.

  - 2.9.1
    - Bug Fixes
      - Fixed the issue that FLEXCAN_TransferReceiveEnhancedFifoBlocking() API clearing Fifo data available flag more than once.
      - Fixed the issue that entering FLEXCAN_SubHandlerForEhancedRxFifo() even if Enhanced Rx fifo interrupts are not enabled.
      - Fixed the issue that FLEXCAN_TransferReceiveEnhancedFifoEDMA() update handle even if previous Rx FIFO receive not finished.
      - Fixed the issue that FLEXCAN_SetEnhancedRxFifoConfig() not configure the ERFCR[NFE] bits to the correct value.
      - Fixed the issue that FLEXCAN_ReceiveFifoEDMACallback() can't differentiate between Rx fifo and enhanced rx fifo.
      - Fixed the issue that FLEXCAN_TransferHandleIRQ() can't report Legacy Rx FIFO warning status.

  - 2.9.0
   - Improvements
    - Add public set bit rate API to make driver easier to use.
    - Update Legacy Rx FIFO transfer APIs to make it support received multiple frames during one API call.
    - Optimized FLEXCAN_SubHandlerForDataTransfered() API in interrupt handling to reduce the probability of packet loss.

  - 2.8.7
   - Improvements
    - Initialized the EDMA configuration structure in the FLEXCAN EDMA driver.

  - 2.8.6
   - Bug Fixes
    - Fix Coverity overrun issues in fsl_flexcan_edma driver.

  - 2.8.5
    - Improvements
      - Make driver aarch64 compatible.

  - 2.8.4
    - Bug Fixes
      - Fixed FlexCan_Errata_6032 to disable all interrupts.

  - 2.8.3
    - Bug Fixes
      - Fixed an issue with the FLEXCAN_EnableInterrupts and FLEXCAN_DisableInterrupts interrupt enable bits in the CTRL1 register.

  - 2.8.2
    - Bug Fixes
      - Fixed errors in timing calculations and simplify the calculation process.
      - Fixed issue of CBT and FDCBT register may write failure.

  - 2.8.1
    - Bug Fixes
      - Fixed the issue of CAN FD three sampling points.
      - Added macro to support the devices that no MCR[SUPV] bit.
      - Remove unnecessary clear WMB operations.

  - 2.8.0
    - Improvements
      - Update config configuration.
        - Added enableSupervisorMode member to support enable/disable Supervisor mode.
      - Simplified the algorithm in CAN FD improved timing APIs.

  - 2.7.1
    - Bug Fixes
      - Fixed violations of the MISRA C-2012 rules 10.3, 10.7.

  - 2.7.0
    - Improvements
      - Update config configuration.
        - Added enablePretendedeNetworking member to support enable/disable Pretended Networking feature.
        - Added enableTransceiverDelayMeasure member to support enable/disable Transceiver Delay MeasurementPretended feature.
        - Added bitRate/bitRateFD member to work as baudRate/baudRateFD member union.
      - Rename all "baud" in code or comments to "bit" to align with the CAN spec.
      - Added Pretended Networking mode related APIs.
        - FLEXCAN_SetPNConfig
        - FLEXCAN_GetPNMatchCount
        - FLEXCAN_ReadPNWakeUpMB
      - Added support for Enhanced Rx FIFO.
      - Removed independent memory error interrupt/status APIs and put all interrupt/status control operation into
        FLEXCAN_EnableInterrupts/FLEXCAN_DisableInterrupts and FLEXCAN_GetStatusFlags/FLEXCAN_ClearStatusFlags APIs.
      - Update improved timing APIs to make it calculate improved timing according to CiA doc recommended.
        - FLEXCAN_CalculateImprovedTimingValues.
        - FLEXCAN_FDCalculateImprovedTimingValues.
      - Update FLEXCAN_SetBitRate/FLEXCAN_SetFDBitRate to added the use of enhanced timing registers.

  - 2.6.2
    - Improvements
      - Add CANFD frame data length enumeration.

  - 2.6.1
    - Bug Fixes
      - Fixed the issue of not fully initializing memory in FLEXCAN_Reset() API.

  - 2.6.0
    - Improvements
      - Enable CANFD ISO mode in FLEXCAN_FDInit API.
      - Enable the transceiver delay compensation feature when enable FD operation and set bitrate switch.
      - Implementation memory error control in FLEXCAN_Init API.
      - Improve FLEXCAN_FDCalculateImprovedTimingValues API to get same value for FPRESDIV and PRESDIV.
      - Added memory error configuration for user.
        - enableMemoryErrorControl
        - enableNonCorrectableErrorEnterFreeze
      - Added memory error related APIs.
        - FLEXCAN_GetMemoryErrorReportStatus
        - FLEXCAN_GetMemoryErrorStatusFlags
        - FLEXCAN_ClearMemoryErrorStatusFlags
        - FLEXCAN_EnableMemoryErrorInterrupts
        - FLEXCAN_DisableMemoryErrorInterrupts
    - Bug Fixes
      - Fixed the issue of sent duff CAN frame after call FLEXCAN_FDInit() API.

  - 2.5.2
    - Bug Fixes
      - Fixed the code error issue and simplified the algorithm in improved timing APIs.
        - The bit field in CTRL1 register couldn't calculate higher ideal SP, we set it as the lowest one(75%)
          - FLEXCAN_CalculateImprovedTimingValues
          - FLEXCAN_FDCalculateImprovedTimingValues
      - Fixed MISRA-C 2012 Rule 17.7 and 14.4.
    - Improvements
      - Pass EsrStatus to callback function when kStatus_FLEXCAN_ErrorStatus is comming.

  - 2.5.1
    - Bug Fixes
      - Fixed the non-divisible case in improved timing APIs.
        - FLEXCAN_CalculateImprovedTimingValues
        - FLEXCAN_FDCalculateImprovedTimingValues

  - 2.5.0
    - Bug Fixes
      - MISRA C-2012 issue check.
        - Fixed rules, containing: rule-10.1, rule-10.3, rule-10.4, rule-10.7, rule-10.8, rule-11.8, rule-12.2, rule-13.4, rule-14.4, rule-15.5, rule-15.6, rule-15.7, rule-16.4, rule-17.3, rule-5.8, rule-8.3, rule-8.5.
      - Fixed the issue that API FLEXCAN_SetFDRxMbConfig lacks inactive message buff.
      - Fixed the issue of Pa082 warning.
      - Fixed the issue of dead lock in the function of interruption handler.
      - Fixed the issue of Legacy Rx Fifo EDMA transfer data fail in evkmimxrt1060 and evkmimxrt1064.
      - Fixed the issue of setting CANFD Bit Rate Switch.
      - Fixed the issue of operating unknown pointer risk.
        - when used the pointer "handle->mbFrameBuf[mbIdx]" to update the timestamp in a short-live TX frame, the frame pointer became as unknown, the action of operating it would result in program stack destroyed.
      - Added assert to check current CAN clock source affected by other clock gates in current device.
        - In some chips, CAN clock sources could be selected by CCM. But for some clock sources affected by other clock gates, if user insisted on using that clock source, they had to open these gates at the same time. However, they should take into consideration the power consumption issue at system level. In RT10xx chips, CAN clock source 2 was affected by the clock gate of lpuart1. ERRATA ID: (ERR050235 in CCM).
    - Improvements
      - Implementation for new FLEXCAN with ECC feature able to exit Freeze mode.
      - Optimized the function of interruption handler.
      - Added two APIs for FLEXCAN EDMA driver.
        - FLEXCAN_PrepareTransfConfiguration
        - FLEXCAN_StartTransferDatafromRxFIFO
      - Added new API for FLEXCAN driver.
        - FLEXCAN_GetTimeStamp
          - For TX non-blocking API, we wrote the frame into mailbox only, so no need to register TX frame address to the pointer, and the timestamp could be updated into the new global variable handle->timestamp[mbIdx], the FLEXCAN driver provided a new API for user to get it by handle and index number after TX DONE Success.
        - FLEXCAN_EnterFreezeMode
        - FLEXCAN_ExitFreezeMode
      - Added new configuration for user.
        - disableSelfReception
        - enableListenOnlyMode
      - Renamed the two clock source enum macros based on CLKSRC bit field value directly.
        - The CLKSRC bit value had no property about Oscillator or Peripheral type in lots of devices, it acted as two different clock input source only, but the legacy enum macros name contained such property, that misled user to select incorrect CAN clock source.
      - Created two new enum macros for the FLEXCAN driver.
          - kFLEXCAN_ClkSrc0
          - kFLEXCAN_ClkSrc1
      - Deprecated two legacy enum macros for the FLEXCAN driver.
          - kFLEXCAN_ClkSrcOsc
          - kFLEXCAN_ClkSrcPeri
      - Changed the process flow for Remote request frame response..
        - Created a new enum macro for the FLEXCAN driver.
          - kStatus_FLEXCAN_RxRemote
      - Changed the process flow for kFLEXCAN_StateRxRemote state in the interrupt handler.
        - Should the TX frame not register to the pointer of frame handle, interrupt handler would not be able to read the remote response frame from the mail box to ram, so user should read the frame by manual from mail box after a complete remote frame transfer.

  - 2.4.0
    - Bug Fixes
      - MISRA C-2012 issue check.
        - Fixed rules, containing: rule-12.1, rule-17.7, rule-16.4, rule-11.9, rule-8.4, rule-14.4, rule-10.8, rule-10.4, rule-10.3, rule-10.7, rule-10.1, rule-11.6, rule-13.5, rule-11.3, rule-8.3, rule-12.2 and rule-16.1.
      - Fixed the issue that CANFD transfer data fail when bus baudrate is 30Khz.
      - Fixed the issue that ERR009595 does not folllow the ERRATA document.
      - Fixed code error for ERR006032 work around solution.
      - Fixed the Coverity issue of BAD_SHIFT in FLEXCAN.
      - Fixed the Repo build warning issue for variable without initial.
    - Improvements
      - Fixed the run fail issue of FlexCAN RemoteRequest UT Case.
      - Implementation all TX and RX transfering Timestamp used in FlexCAN demos.
      - Fixed the issue of UT Test Fail for CANFD payload size changed from 64BperMB to 8PerMB.
      - Implementation for improved timing API by baud rate.

  - 2.3.2
    - Improvements
      - Implementation for ERR005959.
      - Implementation for ERR005829.
      - Implementation for ERR006032.

  - 2.3.1
    - Bug Fixes
      - Added correct handle when kStatus_FLEXCAN_TxSwitchToRx is comming.

  - 2.3.0
    - Improvements
      - Added self-wakeup support for STOP mode in the interrupt handling.

  - 2.2.3
    - Bug Fixes
      - Fixed the issue of CANFD data phase's bit rate not set as expected.

  - 2.2.2
    - Improvements
      - Added a time stamp feature and enable it in the interrupt_transfer example.

  - 2.2.1
    - Improvements
      - Separated CANFD initialization API.
      - In the interrupt handling, fix the issue that the user cannot use the normal CAN API when with an FD.

  - 2.2.0
    - Improvements
      - Added FSL_FEATURE_FLEXCAN_HAS_SUPPORT_ENGINE_CLK_SEL_REMOVE feature to support SoCs without CAN Engine
        Clock selection in FlexCAN module.
      - Added FlexCAN Serial Clock Operation to support i.MX SoCs.

  - 2.1.0
    - Bug Fixes
      - Corrected the spelling error in the function name FLEXCAN_XXX().
      - Moved Freeze Enable/Disable setting from FLEXCAN_Enter/ExitFreezeMode() to FLEXCAN_Init().
      - Corrected wrong helper macro values.
    - Improvements
      - Hid FLEXCAN_Reset() from user.
      - Used NDEBUG macro to wrap FLEXCAN_IsMbOccupied() function instead of DEBUG macro.

  - 2.0.0
    - Initial version.

@if dox_section_flexcan_edma_driver

@section flexcan_edma_driver FLEXCAN_EDMA
  The current FLEXCAN_EDMA driver version is 2.12.0.

  - 2.12.0
    - Bug Fixes
      - Fixed array out-of-bounds access when read enhanced Rx FIFO in EDMA.

  - 2.11.7
    - Refer FLEXCAN driver change log 2.7.0 to 2.11.7

@endif

*/
