/*!
@page driver_log Driver Change Log

@section lpspi LPSPI
  The current LPSPI driver version is 2.6.10.

  - 2.6.10
    - Improvements
      - Conditionally compile interrupt handling code to solve the problem of using this driver on CPU cores that do not support interrupts.

  - 2.6.9
    - Bug Fixes
      - Fixed reading of TCR register
      - Workaround for errata ERR050606

  - 2.6.8
    - Bug Fixes
      - Fixed build error when SPI_RETRY_TIMES is defined to non-zero value.

  - 2.6.7
    - Bug Fixes
      - Fixed the txData from void * to const void * in transmit API _lpspi_master_handle and _lpspi_slave_handle.

  - 2.6.6
    - Bug Fixes
      - Added LPSPI register init in LPSPI_MasterInit incase of LPSPI register exist.

  - 2.6.5
    - Improvements
      - Introduced FSL_FEATURE_LPSPI_HAS_NO_PCSCFG and FSL_FEATURE_LPSPI_HAS_NO_MULTI_WIDTH for conditional compile.
      - Release peripheral from reset if necessary in init function.

  - 2.6.4
    - Bug Fixes
      - Added LPSPI6_DriverIRQHandler for LPSPI6 instance.

  - 2.6.3
    - Hot Fixes
      - Added macro switch in function LPSPI_Enable about ERRATA051472.

  - 2.6.2
    - Bug Fixes
      - Disabled lpspi before LPSPI_MasterSetBaudRate incase of LPSPI opened.

  - 2.6.1
    - Bug Fixes
      - Fixed return value while calling LPSPI_WaitTxFifoEmpty in function LPSPI_MasterTransferNonBlocking.

  - 2.6.0
    - Feature
      - Added the new feature of multi-IO SPI .

  - 2.5.3
    - Bug Fixes
      - Fixed 3-wire txmask of handle vaule reentrant issue.

  - 2.5.2
    - Bug Fixes
      - Workaround for errata ERR051588 by clearing FIFO after transmit underrun occurs.

  - 2.5.1
    - Bug Fixes
      - Workaround for errata ERR050456 by resetting the entire module using LPSPIn_CR[RST] bit.

  - 2.5.0
    - Bug Fixes
      - Workaround for errata ERR011097 to wait the TX FIFO to go empty when writing TCR register and TCR[TXMSK] value is 1.
      - Added API LPSPI_WaitTxFifoEmpty for wait the txfifo to go empty.

  - 2.4.7
    - Bug Fixes
      - Fixed bug that the SR[REF] would assert if software disabled or enabled the LPSPI module in LPSPI_Enable.

  - 2.4.6
    - Improvements
      - Moved the configuration of registers for the 3-wire lpspi mode to the LPSPI_MasterInit and LPSPI_SlaveInit function.

  - 2.4.5
    - Improvements
      - Improved LPSPI_MasterTransferBlocking send performance when frame size is 1-byte.

  - 2.4.4
    - Bug Fixes
      - Fixed LPSPI_MasterGetDefaultConfig incorrect default inter-transfer delay calculation.

  - 2.4.3
    - Bug Fixes
      - Fixed bug that the ISR response speed is too slow on some platforms, resulting in the first transmission of overflow,
        Set proper RX watermarks to reduce the ISR response times.

  - 2.4.2
    - Bug Fixes
      - Fixed bug that LPSPI_MasterTransferBlocking will modify the parameter txbuff and rxbuff pointer.

  - 2.4.1
    - Bug Fixes
      - Fixed bug that LPSPI_SlaveTransferNonBlocking can't detect RX error.

  - 2.4.0
    - Improvements
      - Split some functions, fixed CCM problem in file fsl_lpspi.c.

  - 2.3.1
    - Improvements
      - Initialized the EDMA configuration structure in the LPSPI EDMA driver.
    - Bug Fixes
      - Fixed bug that function LPSPI_MasterTransferBlocking should return after the transfer complete flag is set to
        make sure the PCS is re-asserted.

  - 2.3.0
    - New Features
      - Supported the master configuration of sampling the input data using a delayed clock to improve slave setup time.

  - 2.2.1
    - Bug Fixes
      - Fixed bug in LPSPI_SetPCSContinous when disabling PCS continous mode.

  - 2.2.0
    - Bug Fixes
      - Fixed bug in 3-wire polling and interrupt transfer that the received data is not correct and the PCS continous
        mode is not working.

  - 2.1.0
    - Improvements
      - Improved LPSPI_SlaveTransferHandleIRQ to fill up TX FIFO instead of write one data to TX register which improves
        the slave transmit performance.
      - Added new functional APIs LPSPI_SelectTransferPCS and LPSPI_SetPCSContinous to support changing PCS selection
        and PCS continous mode.
    - Bug Fixes
      - Fixed bug in non-blocking and EDMA transfer APIs that kStatus_InvalidArgument is returned if user configures
        3-wire mode and full-duplex transfer at the same time, but transfer state is already set to kLPSPI_Busy by
        mistake causing following transfer can not start.
      - Fixed bug when LPSPI slave using EDMA way to transfer, tx should be masked when tx data is null, otherwise in
        3-wire mode which tx/rx use the same pin, the received data will be interfered.

  - 2.0.5
    - Improvements
      - Added timeout mechanism when waiting certain states in transfer driver.
    - Bug Fixes
      - Fixed the bug that LPSPI can not transfer large data using EDMA.
      - Fixed MISRA 17.7 issues.
      - Fixed variable overflow issue introduced by MISRA fix.
      - Fixed issue that rxFifoMaxBytes should be calculated according to transfer width rather
        than FIFO width.
      - Fixed issue that completion flag was not cleared after transfer completed.

  - 2.0.4
    - Bug Fixes
      - Fixed in LPSPI_MasterTransferBlocking that master rxfifo may overflow in stall condition.
      - Eliminated IAR Pa082 warnings.
      - Fixed MISRA issues.
        - Fixed rules 10.1, 10.3, 10.4, 10.6, 11.9, 14.2, 14.4, 15.7, 17.7.

  - 2.0.3
    - Bug Fixes
      - Removed LPSPI_Reset from LPSPI_MasterInit and LPSPI_SlaveInit, because this API
        may glitch the slave select line. If needed, call this function manually.

  - 2.0.2
    - New Features
      - Added dummy data set up API to allow users to configure the dummy data to be transferred.
      - Enabled the 3-wire mode, SIN and SOUT pins can be configured as input/output pin.

  - 2.0.1
    - Bug Fixes
      - Fixed the bug that the clock source should be divided by the PRESCALE setting in
        LPSPI_MasterSetDelayTimes function.
      - Fixed the bug that LPSPI_MasterTransferBlocking function would hang in some corner cases.
    - Optimization
      - Added \#ifndef/\#endif to allow user to change the default TX value at compile time.

  - 2.0.0
    - Initial version.

@section lpspi_EDMA LPSPI_EDMA
  The current LPSPI_EDMA driver version is 2.4.6.

  - 2.4.6
    - Improvements
      - Increased transmit FIFO watermark to ensure whole transmit FIFO will be used during data transfer.

  - 2.4.5
    - Bug Fixes
      - Fixed reading of TCR register
      - Workaround for errata ERR050606

  - 2.4.4
    - Improvements
      - Add EDMA ext API to accommodate more types of EDMA.

  - 2.4.3
    - Improvements
      - Supported 32K bytes transmit in DMA, improve the max datasize in LPSPI_MasterTransferEDMALite.

  - 2.4.2
    - Improvements
      - Added callback status in EDMA_LpspiMasterCallback and EDMA_LpspiSlaveCallback to check transferDone.

  - 2.4.1
    - Improvements
      - Add the TXMSK wait after TCR setting.

  - 2.4.0
    - Improvements
      - Separated LPSPI_MasterTransferEDMA functions to LPSPI_MasterTransferPrepareEDMA and LPSPI_MasterTransferEDMALite to optimize the process of transfer.

*/
